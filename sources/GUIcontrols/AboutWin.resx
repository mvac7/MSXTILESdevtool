<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OKButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAH4AAAAkCAYAAABPNo4ZAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAGISURBVHhe7dtRasRADAPQPWnP0cP2Lql3CSHSyHj2
        bzRx4ZUiRyHG330dxwHi5/2rbWa48xBQoe1huPP1Bz3Y9tSHf6jbvfUDP3+/bQPqticZypc0P+q2JwxU
        ufnjOwcMVKn54zsHDFSp+eM7BwxUqfnjOwcMVKn54zsHDFSp+eM7BwxUyQHvwarneb4b3jdgoEoOeA9W
        Pc/z3fC+AQNVWln1/dk8y2fnbnifgIEqraz6/mye5bNzN7xPwECVVlZ9fzbP8tm5G94nYKBKK6u+P5tn
        +ezcDe8TMFCllVXfn805z9zf5UzshoEqraz6/mzOeeb+LmdiNwxUaWXV92fzLJ+du+F9AgaqtLLq+7N5
        ls/O3fA+AQNVcsB7sOr5b+dueJ+AgSo54D1Y9fy3cze8T8BAlZo/vnPAQJWaP75zwECVmj++c8BAlZo/
        vnPAQJWaP75zwECVmj++cxiCD1VuftRtTzKUL2l+1G0/+p8mn+W6dx/+WYbDXwE92PYw3HkIqND2gHc+
        Xv+jdo+bB0a3tgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="LicenseButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>